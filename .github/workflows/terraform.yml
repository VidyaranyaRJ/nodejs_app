name: Terraform EC2 Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: AWS
    defaults:
      run:
        working-directory: ./code/EC2
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Debug Secrets Availability
      run: |
        echo "Check if secrets are available (without revealing values):"
        if [ -n "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
          echo "AWS_ACCESS_KEY_ID is set and not empty"
          echo "First character: ${${{ secrets.AWS_ACCESS_KEY_ID }}:0:1}*****"
        else
          echo "AWS_ACCESS_KEY_ID is NOT set or is empty"
        fi
        
        if [ -n "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
          echo "AWS_SECRET_ACCESS_KEY is set and not empty"
          echo "First character: ${${{ secrets.AWS_SECRET_ACCESS_KEY }}:0:1}*****"
        else
          echo "AWS_SECRET_ACCESS_KEY is NOT set or is empty"
        fi
        
        echo "Using AWS region: us-east-2"
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
        
    - name: Alternative AWS Credentials Setup
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV
        echo "AWS_REGION=us-east-2" >> $GITHUB_ENV
        echo "Environment variables set directly"
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    
    - name: Verify AWS CLI
      run: aws sts get-caller-identity || echo "AWS CLI verification failed"
      continue-on-error: true
        
    - name: Terraform Init
      run: terraform init
      continue-on-error: true
    
    - name: Terraform Format
      run: terraform fmt -check
      continue-on-error: true
      
    - name: Terraform Validate
      run: terraform validate
      continue-on-error: true
    
    - name: Terraform Plan
      run: terraform plan -no-color
      continue-on-error: true